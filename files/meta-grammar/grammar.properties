
package: name.martingeisse.mapag.input

parser.class: MapagGeneratedMapagParser

symbol.elementType.class: MapagElementType
symbol.holder.class: Symbols

intellij.psi.utilClass: name.martingeisse.mapag.input.psi.PsiUtil
intellij.psi.supports.psiNameIdentifierOwner: TerminalDeclaration, Production
intellij.psi.supports.getReference: PrecedenceDeclarationSymbol, Expression_Identifier
intellij.psi.supports.safeDelete: TerminalDeclaration, Production
intellij.parserDefinitionClass: name.martingeisse.mapag.ide.MapagParserDefinition
intellij.fileElementType: name.martingeisse.mapag.ide.MapagParserDefinition.FILE_ELEMENT_TYPE

parser.error.KW_TERMINALS: %terminals
parser.error.KW_PRECEDENCE: %precedence
parser.error.KW_LEFT: %left
parser.error.KW_RIGHT: %right
parser.error.KW_NONASSOC: %nonassoc
parser.error.KW_START: %start
parser.error.KW_RESOLVE: %resolve
parser.error.KW_SHIFT: %shift
parser.error.KW_REDUCE: %reduce
parser.error.KW_EOF: %eof
parser.error.KW_ERROR: %error
parser.error.KW_REDUCE_ON_ERROR: %reduceOnError
parser.error.KW_EMPTY: %empty
parser.error.OPENING_CURLY_BRACE: {
parser.error.CLOSING_CURLY_BRACE: }
parser.error.OPENING_PARENTHESIS: (
parser.error.CLOSING_PARENTHESIS: )
parser.error.COMMA: ,
parser.error.SEMICOLON: ;
parser.error.COLON: :
parser.error.EXPANDS_TO: ::=
parser.error.QUESTION_MARK: ?
parser.error.ASTERISK: *
parser.error.PLUS: +
parser.error.BAR: |
parser.error.IDENTIFIER: identifier
parser.error.BLOCK_COMMENT: /*
parser.error.LINE_COMMENT: //
parser.error.precedenceDeclaration: precedence-declaration
parser.error.precedenceDeclaration_terminals: identifier(s)
parser.error.production: production
parser.error.expression: expression
parser.error.resolveDeclaration: resolve-declaration
